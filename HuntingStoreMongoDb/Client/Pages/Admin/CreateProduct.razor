@page "/admin/create"
@layout AdminLayout

@inject State state
@inject NavigationManager navigationManager
@inject IAdminService adminService
@inject IJSRuntime jsRuntime
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]

<h3 class="text-center mt-2" style="background-color:darkcyan;color:white">Create product</h3>

<EditForm OnValidSubmit="@CreateProductAsync" Model="Products">
    <div>
        <DataAnnotationsValidator />
        <ValidationSummary />
    </div>
    <div class="form-group">
        <label style="font-weight:bold">
            <span class="fa fa-id-card" aria-hidden="true"></span>&nbsp;Name
        </label>
        <div>
            <InputText class="form-control" @bind-Value="@Products.Name"></InputText>
        </div>
    </div>
    <div class="form-group mt-2">
        <label style="font-weight:bold">
            <span class="fa fa-folder-open" aria-hidden="true"></span>&nbsp;Desscription
        </label>
        <div>
            <InputTextArea class="form-control" @bind-Value="@Products.Description"></InputTextArea>
        </div>
    </div>
    <div class="form-group mt-2">
        <label style="font-weight:bold">
            <span class="fa fa-credit-card" aria-hidden="true"></span>&nbsp;Price
        </label>
        <div>
            <InputNumber class="form-control" @bind-Value="@Products.Price"></InputNumber>
        </div>
    </div>
    <div class="form-group mt-2">
        <label style="font-weight:bold">
            <span class="fa fa-bar-chart" aria-hidden="true"></span>&nbsp;Categories
        </label>
        <div>
            <InputSelect @bind-Value="@Products.Category" class="form-select">
                @foreach (var cat in Categories)
                {
                    <option value="@cat">@cat</option>
                }
            </InputSelect>
        </div>
    </div>
    <div class="form-group">
        <label></label>
    </div>
    <div class="mt-2">
        <button type="submit" class="btn btn-success">Create product</button>
        <button class="btn btn-secondary ml-2" @onclick="@(e => Cancel(e))">Cancel</button>
    </div>
</EditForm>

<CascadingValue Value="@Message">
    <MessageModal CloseModal="@CloseMessageModal"></MessageModal>
</CascadingValue>

@code {

    private Product Products = new Product();
    private List<string> Categories = new List<string>();
    private string Message { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        Categories = state.AdminProducts.Select(x => x.Category).Distinct().ToList();
        await Task.CompletedTask;
    }

    private async Task CreateProductAsync()
    {
        var response = await adminService.CreateProductAsync(Products);
        if (response.IsSuccessStatusCode)
        {
            Message = await response.Content.ReadAsStringAsync();
            await jsRuntime.InvokeVoidAsync("ShowMessageModal");
        }
    }

    private void Cancel(MouseEventArgs e)
    {
        navigationManager.NavigateTo("/admin/products");
    }

    private void CloseMessageModal()
    {
        jsRuntime.InvokeVoidAsync("HideMessageModal");
        navigationManager.NavigateTo("/admin/products");
    }
}
